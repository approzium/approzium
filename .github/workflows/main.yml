# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ 'develop' ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
        # Avoid caching pull-only images.(docker pull is faster than caching.)
      - run: docker-compose pull

      # Images created after this action is called are cached.
      - uses: satackey/action-docker-layer-caching@v0.0
      - run: make dc-build
        
  #    - name: Run docker-compose build
  #      run: make dc-build
        
      - id: cache-docker
        uses: actions/cache@v1
        with:
          path: /tmp/docker-registry
          key: docker-registry-buildkit-${{ hashFiles('Dockerfile') }}
      - run: docker run -d -p 5000:5000 --restart=always --name registry -v /tmp/docker-registry:/var/lib/registry registry:2 && npx wait-on tcp:5000
      - run: docker build . -t thing --cache-from=localhost:5000/thing --build-arg BUILDKIT_INLINE_CACHE=1
      - run: docker tag thing localhost:5000/thing && docker push localhost:5000/thing || true
        if: steps.cache.outputs.cache-hit != 'true'
     
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
        
      - name: Run Go tests
        run: make run-in-docker CMD="make run-gotests"
    
      - name: Run Python tests
        run: make run-in-docker CMD="make run-pythontests"
        
      #- name: Run E2E test
      #  run: make test
        
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: gofmt
        run: gofmt -s -w .

      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - name: Install Python lint libraries
        run: |
          pip install isort black flake8

      - run: cd sdk/python && isort -y --recursive
      - run: cd sdk/python && black .
      - run: cd sdk/python && flake8

      # commit changes
      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          # Required
          commit_message: Automatic lint

          # Optional branch to push to, defaults to the current branch
          # branch: feature-123

          # Optional options appended to `git-commit`
          commit_options: '--no-verify --signoff'

          # Optional glob pattern of files which should be added to the commit
          # file_pattern: src/*.js tests/*.js

          # Optional local file path to the repository
          repository: .

          # Optional commit user and author settings
          commit_user_name: GitHub Actions Bot

          # Optional options appended
          # push_options: '--force'
